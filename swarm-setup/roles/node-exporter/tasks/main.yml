---
# tasks file for node-exporter

- name: node-exporter | Get checksum list from github
  set_fact:
    _checksums: "{{ lookup('url', 'https://github.com/prometheus/node_exporter/releases/download/v' + node_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
  run_once: true

- name: node-exporter | "Get checksum for {{ go_arch_map[ansible_architecture] | default(ansible_architecture) }} architecture"
  set_fact:
    node_exporter_checksum: "{{ item.split(' ')[0] }}"
  with_items: "{{ _checksums }}"
  when: "('linux-' + (go_arch_map[ansible_architecture] | default(ansible_architecture)) + '.tar.gz') in item"

- name: node-exporter | Create the node_exporter group
  group:
    name: "{{ node_exporter_system_group }}"
    state: present
    system: true
  become: True

- name: node-exporter | Create the node_exporter user
  user:
    name: "{{ node_exporter_system_user }}"
    groups:
      - "{{ node_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /
  become: True

- name: node-exporter | Download node_exporter binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    checksum: "sha256:{{ node_exporter_checksum }}"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: node-exporter | Unpack node_exporter binary
  become: false
  unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/node_exporter"
  delegate_to: localhost
  check_mode: false

- name: node-exporter | Propagate node_exporter binaries
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    mode: 0750
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
  become: True
  when: not ansible_check_mode

- name: node-exporter | Copy the Node Exporter systemd service file
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0644
  become: True
  notify: restart node-exporter

- name: node-exporter | Create texfile collector dir
  file:
    path: "{{ node_exporter_textfile_dir }}"
    state: directory
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    recurse: true
    mode: 0775
  become: True
  when: node_exporter_textfile_dir != ""

- name: node-exporter | Ensure Node Exporter is enabled on boot
  systemd:
    daemon_reload: true
    name: node_exporter
    enabled: true
    state: started
  become: True

